[{"C:\\Users\\joaop\\Wamp\\www\\tiAcademy-React\\src\\index.js":"1","C:\\Users\\joaop\\Wamp\\www\\tiAcademy-React\\src\\App.js":"2","C:\\Users\\joaop\\Wamp\\www\\tiAcademy-React\\src\\components\\Menu.js":"3","C:\\Users\\joaop\\Wamp\\www\\tiAcademy-React\\src\\views\\Home\\index.js":"4","C:\\Users\\joaop\\Wamp\\www\\tiAcademy-React\\src\\views\\Cliente\\Listar\\index.js":"5","C:\\Users\\joaop\\Wamp\\www\\tiAcademy-React\\src\\views\\Servico\\Listar\\index.js":"6","C:\\Users\\joaop\\Wamp\\www\\tiAcademy-React\\src\\config\\index.js":"7","C:\\Users\\joaop\\Wamp\\www\\tiAcademy-React\\src\\views\\Servico\\Item\\index.js":"8","C:\\Users\\joaop\\Wamp\\www\\tiAcademy-React\\src\\views\\Pedido\\Listar\\index.js":"9","C:\\Users\\joaop\\Wamp\\www\\tiAcademy-React\\src\\views\\Servico\\Cadastrar\\index.js":"10"},{"size":251,"mtime":1636480707881,"results":"11","hashOfConfig":"12"},{"size":1009,"mtime":1636661597869,"results":"13","hashOfConfig":"12"},{"size":1172,"mtime":1636478649366,"results":"14","hashOfConfig":"12"},{"size":1596,"mtime":1636660652984,"results":"15","hashOfConfig":"12"},{"size":2453,"mtime":1636659707338,"results":"16","hashOfConfig":"12"},{"size":2728,"mtime":1636661417384,"results":"17","hashOfConfig":"12"},{"size":44,"mtime":1636480349825,"results":"18","hashOfConfig":"12"},{"size":2142,"mtime":1636659348388,"results":"19","hashOfConfig":"12"},{"size":2031,"mtime":1636660411211,"results":"20","hashOfConfig":"12"},{"size":3157,"mtime":1636665209894,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"11fwtze",{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\joaop\\Wamp\\www\\tiAcademy-React\\src\\index.js",[],["48","49"],"C:\\Users\\joaop\\Wamp\\www\\tiAcademy-React\\src\\App.js",[],"C:\\Users\\joaop\\Wamp\\www\\tiAcademy-React\\src\\components\\Menu.js",["50","51","52","53","54","55"],"import React, { useState } from 'react';\r\nimport {\r\n    Collapse,\r\n    Navbar,\r\n    NavbarToggler,\r\n    NavbarBrand,\r\n    Nav,\r\n    NavItem,\r\n    NavLink,\r\n    UncontrolledDropdown,\r\n    DropdownToggle,\r\n    DropdownMenu,\r\n    DropdownItem,\r\n    NavbarText,\r\n    Container\r\n} from 'reactstrap';\r\n\r\nexport const Menu = (props) => {\r\n    // const[isOpen, setIsOpen] = useState(false);\r\n    // const toggle = () => setIsOpen(!isOpen);\r\n    return (\r\n        <div>\r\n            <Navbar color=\"info\" dark expand=\"md\">\r\n                <Container>\r\n                <NavbarBrand href=\"/\">Ti Academy</NavbarBrand>\r\n                <NavbarToggler onClick={function noRefCheck() { }} />\r\n                <Collapse navbar>\r\n                    <Nav\r\n                        className=\"me-auto\"\r\n                        navbar\r\n                    >\r\n                        <NavItem>\r\n                            <NavLink href=\"/\">\r\n                                Home\r\n                            </NavLink>\r\n                        </NavItem>\r\n                    </Nav>\r\n                </Collapse>\r\n                </Container>\r\n            </Navbar>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\joaop\\Wamp\\www\\tiAcademy-React\\src\\views\\Home\\index.js",[],"C:\\Users\\joaop\\Wamp\\www\\tiAcademy-React\\src\\views\\Cliente\\Listar\\index.js",["56","57"],"import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Alert, Container, Table } from \"reactstrap\";\r\n\r\nimport { api } from \"../../../config\";\r\n\r\nexport const ListarCli = () => {\r\n\r\n    const [data, setData] = useState([]);\r\n\r\n    const [status, setStatus] = useState({\r\n        type: '',\r\n        message: ''\r\n    });\r\n\r\n    const getClientes = async () => {\r\n        await axios.get(api + \"/listaclientes\")\r\n            .then((response) => {\r\n                console.log(response.data.clientes);\r\n                setData(response.data.clientes)\r\n            })\r\n            .catch(() => {\r\n                setStatus({\r\n                    type: 'error',\r\n                    message: 'Erro: sem conexão com a API.'\r\n                })\r\n                // console.log(\"Sem conexão com a API\")\r\n            });\r\n    };\r\n\r\n    useEffect(() => {\r\n        getClientes();\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Container>\r\n                <div>\r\n                    <h1>Visualizar informações dos clientes</h1>\r\n                </div>\r\n                {status.type == 'error' ?\r\n                    <Alert color=\"danger\">\r\n                        {status.message}\r\n                    </Alert> : \"\"}\r\n\r\n\r\n                <Table striped>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>Nome</th>\r\n                            <th>Endereço</th>\r\n                            <th>Cidade</th>\r\n                            <th>UF</th>\r\n                            <th>Nascimneto</th>\r\n                            <th>ClienteDesde</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {data.map(item => (\r\n                            <tr key={item.id}>\r\n                                <td>{item.id}</td>\r\n                                <td>{item.nome}</td>\r\n                                <td>{item.endereco}</td>\r\n                                <td>{item.cidade}</td>\r\n                                <td>{item.uf}</td>\r\n                                <td>{item.nascimento}</td>\r\n                                <td>{item.clienteDesde}</td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n            </Container>\r\n        </div>\r\n    );\r\n};","C:\\Users\\joaop\\Wamp\\www\\tiAcademy-React\\src\\views\\Servico\\Listar\\index.js",["58"],"import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Alert, Container, Table } from \"reactstrap\";\r\n\r\nimport { api } from \"../../../config\";\r\n\r\nexport const ListarServ = () => {\r\n\r\n    const [data, setData] = useState([]);\r\n\r\n    const [status, setStatus] = useState({\r\n        type: '',\r\n        message: ''\r\n    });\r\n\r\n    const getServicos = async () => {\r\n        await axios.get(api + \"/listaservicos\")\r\n            .then((response) => {\r\n                console.log(response.data.servicos);\r\n                setData(response.data.servicos)\r\n            })\r\n            .catch(() => {\r\n                setStatus({\r\n                    type: 'error',\r\n                    message: 'Erro: sem conexão com a API.'\r\n                })\r\n                // console.log(\"Sem conexão com a API\")\r\n            });\r\n    };\r\n\r\n    useEffect(() => {\r\n        getServicos();\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Container>\r\n                <div className=\"d-flex\">\r\n                    <div>\r\n                        <h1>Visualizar informações do serviço</h1>\r\n                    </div>\r\n                    <div className=\" m-auto p-2\">\r\n                        <Link to=\"cadastrar-servico\" className=\"btn btn-outline-primary btn-sm\">Cadastrar</Link>\r\n                    </div>\r\n                    {status.type == 'error' ?\r\n                        <Alert color=\"danger\">\r\n                            {status.message}\r\n                        </Alert> : \"\"}\r\n                </div>\r\n\r\n                <Table striped>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>Nome</th>\r\n                            <th>Descrição</th>\r\n                            <th>Ação</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {data.map(item => (\r\n                            <tr key={item.id}>\r\n                                <td>{item.id}</td>\r\n                                <td>{item.nome}</td>\r\n                                <td>{item.descricao}</td>\r\n                                <td className=\"texte-center\">\r\n                                    <Link to={\"listar-pedido/\" + item.id}\r\n                                        className=\"btn btn-outline-primary btn-sm\">\r\n                                        Consultar\r\n                                    </Link>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n            </Container>\r\n        </div>\r\n    );\r\n};","C:\\Users\\joaop\\Wamp\\www\\tiAcademy-React\\src\\config\\index.js",[],"C:\\Users\\joaop\\Wamp\\www\\tiAcademy-React\\src\\views\\Servico\\Item\\index.js",["59","60","61","62"],"import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Alert, Container, Table } from \"reactstrap\";\r\n\r\nimport { api } from \"../../../config\";\r\n\r\nexport const Item = (props) => {\r\n\r\n    // console.log(props.match.params.id);\r\n\r\n    const [data, setData] = useState([]);\r\n\r\n    const[id, setId] = useState(props.match.params.id)\r\n\r\n    const [status, setStatus] = useState({\r\n        type: '',\r\n        message: ''\r\n    });\r\n\r\n    const getItens = async () => {\r\n        await axios.get(api + \"/servico/\"+id+\"/pedidos\")\r\n            .then((response) => {\r\n                console.log(response.data.item);\r\n                setData(response.data.item)\r\n            })\r\n            .catch(() => {\r\n                setStatus({\r\n                    type: 'error',\r\n                    message: 'Erro: sem conexão com a API.'\r\n                })\r\n                // console.log(\"Sem conexão com a API\")\r\n            });\r\n    };\r\n\r\n    useEffect(() => {\r\n        getItens();\r\n    }, [id])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Container>\r\n                <div>\r\n                    <h1>Pedidos do serviço</h1>\r\n                </div>\r\n                {status.type == 'error' ?\r\n                    <Alert color=\"danger\">\r\n                        {status.message}\r\n                    </Alert> : \"\"}\r\n\r\n\r\n                <Table striped>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Pedido</th>\r\n                            <th>Quantidade</th>\r\n                            <th>Valor</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {data.map(item => (\r\n                            <tr key={item.ServicoId}>\r\n                                <td>{item.PedidoId}</td>\r\n                                <td>{item.quantidade}</td>\r\n                                <td>{item.valor}</td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n            </Container>\r\n        </div>\r\n    );\r\n};","C:\\Users\\joaop\\Wamp\\www\\tiAcademy-React\\src\\views\\Pedido\\Listar\\index.js",["63","64"],"import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Alert, Container, Table } from \"reactstrap\";\r\n\r\nimport { api } from \"../../../config\";\r\n\r\nexport const ListarPed = () => {\r\n\r\n    const [data, setData] = useState([]);\r\n\r\n    const [status, setStatus] = useState({\r\n        type: '',\r\n        message: ''\r\n    });\r\n\r\n    const getPedidos = async () => {\r\n        await axios.get(api + \"/listapedidos\")\r\n            .then((response) => {\r\n                console.log(response.data.pedidos);\r\n                setData(response.data.pedidos)\r\n            })\r\n            .catch(() => {\r\n                setStatus({\r\n                    type: 'error',\r\n                    message: 'Erro: sem conexão com a API.'\r\n                })\r\n                // console.log(\"Sem conexão com a API\")\r\n            });\r\n    };\r\n\r\n    useEffect(() => {\r\n        getPedidos();\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Container>\r\n                <div>\r\n                    <h1>Visualizar informações dos pedidos</h1>\r\n                </div>\r\n                {status.type == 'error' ?\r\n                    <Alert color=\"danger\">\r\n                        {status.message}\r\n                    </Alert> : \"\"}\r\n\r\n\r\n                <Table striped>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>Data</th>\r\n                            <th>ClientId</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {data.map(item => (\r\n                            <tr key={item.id}>\r\n                                <td>{item.id}</td>\r\n                                <td>{item.data}</td>\r\n                                <td>{item.ClienteId}</td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n            </Container>\r\n        </div>\r\n    );\r\n};","C:\\Users\\joaop\\Wamp\\www\\tiAcademy-React\\src\\views\\Servico\\Cadastrar\\index.js",[],{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":1,"column":17,"nodeType":"71","messageId":"72","endLine":1,"endColumn":25},{"ruleId":"69","severity":1,"message":"73","line":10,"column":5,"nodeType":"71","messageId":"72","endLine":10,"endColumn":25},{"ruleId":"69","severity":1,"message":"74","line":11,"column":5,"nodeType":"71","messageId":"72","endLine":11,"endColumn":19},{"ruleId":"69","severity":1,"message":"75","line":12,"column":5,"nodeType":"71","messageId":"72","endLine":12,"endColumn":17},{"ruleId":"69","severity":1,"message":"76","line":13,"column":5,"nodeType":"71","messageId":"72","endLine":13,"endColumn":17},{"ruleId":"69","severity":1,"message":"77","line":14,"column":5,"nodeType":"71","messageId":"72","endLine":14,"endColumn":15},{"ruleId":"69","severity":1,"message":"78","line":3,"column":10,"nodeType":"71","messageId":"72","endLine":3,"endColumn":14},{"ruleId":"79","severity":1,"message":"80","line":43,"column":30,"nodeType":"81","messageId":"82","endLine":43,"endColumn":32},{"ruleId":"79","severity":1,"message":"80","line":47,"column":34,"nodeType":"81","messageId":"82","endLine":47,"endColumn":36},{"ruleId":"69","severity":1,"message":"78","line":3,"column":10,"nodeType":"71","messageId":"72","endLine":3,"endColumn":14},{"ruleId":"69","severity":1,"message":"83","line":14,"column":15,"nodeType":"71","messageId":"72","endLine":14,"endColumn":20},{"ruleId":"84","severity":1,"message":"85","line":38,"column":8,"nodeType":"86","endLine":38,"endColumn":12,"suggestions":"87"},{"ruleId":"79","severity":1,"message":"80","line":47,"column":30,"nodeType":"81","messageId":"82","endLine":47,"endColumn":32},{"ruleId":"69","severity":1,"message":"78","line":3,"column":10,"nodeType":"71","messageId":"72","endLine":3,"endColumn":14},{"ruleId":"79","severity":1,"message":"80","line":43,"column":30,"nodeType":"81","messageId":"82","endLine":43,"endColumn":32},"no-native-reassign",["88"],"no-negated-in-lhs",["89"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'UncontrolledDropdown' is defined but never used.","'DropdownToggle' is defined but never used.","'DropdownMenu' is defined but never used.","'DropdownItem' is defined but never used.","'NavbarText' is defined but never used.","'Link' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'setId' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getItens'. Either include it or remove the dependency array.","ArrayExpression",["90"],"no-global-assign","no-unsafe-negation",{"desc":"91","fix":"92"},"Update the dependencies array to be: [getItens, id]",{"range":"93","text":"94"},[1044,1048],"[getItens, id]"]